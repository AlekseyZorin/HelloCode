// Есть несколько разных групп методов(функций):

// ПЕРВЫЙ ВИД(группа) МЕТОДА - методы которые ничего НЕ ВОЗВРАЩАЮТ и ничего НЕ ПРИНИМАЮТ

// void Method1()                // ключевое слово VOID, и в скобках нет никаких аргументов(переменных)
// {
//     Console.WriteLine("Hello World!"); // Любой текст
// }
// Method1(); // Вызов данного метода(! скобки обязательно)



// ВТОРОЙ ВИД(группа) МЕТОДА - методы которые ничего НЕ ВОЗРАЩАЮТ, но могут ПРИНИМАТЬ какие-то аргументы(переменные)

// void Method2_1(string msg)                // ключевое слово VOID, а в скобках принимает аргумет строкового(необязательно можно и int  и др.) значения под именнованием msg
// {
//     Console.WriteLine(msg); // Вызывается строковое значение 
// }
// Method2_1("Текст сообщения"); // Любой текст(именно для строки, для int только числа и т.д.)
// Method2(msg:"Текст сообщения"); // Другой вид вывода, если аргументов(переменных) несколько


//void Method2_2(string msg, int count) // так же как и Method2_1 но имеет несколько аргументов
// {                          // тут имеется строковый аргумент и int аргумент
//     int i = 0;   // вводим новую переменную i для обрования счетчика
//     while (i < count) // задаём цикл работы
//     {
//         Console.WriteLine(msg); // и в итоге данный текст будет печататься заданное количество раз
//         i++; // i++ называют инкрементом(увелечение на единицу), а i-- декрементом(уменьшение на еденицу)
//     }
// }
// Method2_2("Текст", 4); // "Текст" - относится к аргументу msg, а 4 к аргументу count. Пишутся через запятую
                      // В следствии чего слово "Текст" напечатается 4 раза
// Method2_2(msg:"Текст", count: 4);  // Так же можно их именовать, но после названия аргумента ставится двоиточие (:)
// Method2_2(count: 4, msg:"Новый Текст"); // При именование аргументов их можно ставить в любом порядке(но только при именование)



// ТРЕТИЙ ВИД(группа) МЕТОДА - методы которые что-то ВОЗВРАЩАЮТ, но ничего НЕ ПРИНИМАЮТ

// int Method3() // в отличие от void тут ОБЯЗАТЕЛЬНО нужно указывать тип данных значение которого мы ожидаем в следствии возврата(int, string, bool и т.д.)
// {
//     return DateTime.Now.Year; // DateTime.Now.Year показывает текущий год
// }
// int year = Method3(); // для того чтобы вывести полученное значение нам нужно создать новую переменную и ПРИСВОИТЬ ей результат данного метода
// Console.WriteLine(year); //  и затем вызываем данную переменную



// ЧЕТВЁРТЫЙ ВИД(группа) МЕТОДА - методы которые что-то ВОЗВРАЩАЮТ, а также могут ПРИНИМАТЬ какие-то аргументы(переменные)
// в отличие от void тут ОБЯЗАТЕЛЬНО нужно указывать тип данных значение которого мы ожидаем в следствии возврата(int, string, bool и т.д.)
// в скобках принимает аргумет строкового(необязательно можно и int  и др.) значения под именнованием переменной

// string Method4(int count, string text) // в данном методе мы будем строку TEXT воспроизводить COUNT раз в одну строчку(т.е. друг за другом)
// {
//     int i = 0;
//     string result = String.Empty; // String.Empty - это значит Пустота, т.е. пустая строка в которой нет никаких данных(грубо говоря присвоили ей значение ноль, но т.к. это строка то таким способом)
//     while(i < count)
//     {
//         result = result + text;
//         i++;
//     }
//     return result;
// }

// string res = Method4(4, "Hello");
// Console.WriteLine(res);
